[tool.poetry]
name = "schedule-dnd"
version = "2.0.0"
description = "Production-ready patrol schedule management system for Voluntary People's Squads (DND)"
authors = ["DmitrTRC <dmitr@github.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/DmitrTRC/schedule-dnd"
repository = "https://github.com/DmitrTRC/schedule-dnd"
documentation = "https://github.com/DmitrTRC/schedule-dnd/docs"
keywords = ["patrol", "schedule", "dnd", "management", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Office/Business :: Scheduling",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
packages = [{include = "schedule_dnd", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
rich = "^13.7.0"
openpyxl = "^3.1.2"
python-dateutil = "^2.8.2"
typing-extensions = "^4.9.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-asyncio = "^0.21.1"
black = "^23.12.0"
isort = "^5.13.2"
mypy = "^1.7.1"
pylint = "^3.0.3"
bandit = {extras = ["toml"], version = "^1.7.6"}
pre-commit = "^3.6.0"
faker = "^22.0.0"

[tool.poetry.scripts]
schedule-dnd = "schedule_dnd.__main__:main"

# ═══════════════════════════════════════════════════════════
# Black Configuration
# ═══════════════════════════════════════════════════════════
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# ═══════════════════════════════════════════════════════════
# isort Configuration
# ═══════════════════════════════════════════════════════════
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true
skip = [".venv", "venv", "env"]

# ═══════════════════════════════════════════════════════════
# mypy Configuration
# ═══════════════════════════════════════════════════════════
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true
ignore_missing_imports = false

[[tool.mypy.overrides]]
module = "openpyxl.*"
ignore_missing_imports = true

# ═══════════════════════════════════════════════════════════
# pytest Configuration
# ═══════════════════════════════════════════════════════════
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = """
    --strict-markers
    --strict-config
    --cov=src/schedule_dnd
    --cov-report=html
    --cov-report=term-missing:skip-covered
    --cov-report=xml
    --cov-fail-under=90
    -ra
    --tb=short
"""
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]

# ═══════════════════════════════════════════════════════════
# coverage Configuration
# ═══════════════════════════════════════════════════════════
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/__main__.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
    "@abc.abstractmethod",
]

# ═══════════════════════════════════════════════════════════
# pylint Configuration
# ═══════════════════════════════════════════════════════════
[tool.pylint.main]
py-version = "3.11"
jobs = 0
limit-inference-results = 100
fail-under = 9.0

[tool.pylint.messages_control]
disable = [
    "C0330",  # Wrong hanging indentation (conflicts with black)
    "C0326",  # Bad whitespace (conflicts with black)
    "R0903",  # Too few public methods (for Pydantic models)
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 7
max-attributes = 10
max-bool-expr = 5
max-branches = 12
max-locals = 15
max-parents = 7
max-public-methods = 20
max-returns = 6
max-statements = 50
min-public-methods = 1

# ═══════════════════════════════════════════════════════════
# bandit Configuration
# ═══════════════════════════════════════════════════════════
[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
skips = ["B101", "B601"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
